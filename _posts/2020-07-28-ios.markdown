---
layout: post
title:  "ios"
date:   2020-07-28 13:50:00
categories: 其它
---


## 维度
* 基础能力
* 算法能力
* 项目框架
* 业界框架

## 相关网址
基础能力
* [https://github.com/Alllfred/iOSReview](https://github.com/Alllfred/iOSReview) 已完成
* [https://github.com/lzyy/iOS-Developer-Interview-Questions](https://github.com/lzyy/iOS-Developer-Interview-Questions) 已完成
* [https://github.com/icofans/iOS-Interview-Questions](https://github.com/icofans/iOS-Interview-Questions)
* [https://github.com/colourful987/bytedance-alibaba-interview](https://github.com/colourful987/bytedance-alibaba-interview)
* [https://github.com/liberalisman/iOS-InterviewQuestion-collection](https://github.com/liberalisman/iOS-InterviewQuestion-collection)
* [https://juejin.im/post/5e397ccaf265da570b3f1b02](https://juejin.im/post/5e397ccaf265da570b3f1b02)
* [https://github.com/chaoskyx/iOS-Interview-Questions](https://github.com/chaoskyx/iOS-Interview-Questions)
* [https://github.com/timhbw/iOSInterviewQuestions](https://github.com/timhbw/iOSInterviewQuestions)
* [https://github.com/ChenYilong/iOSInterviewQuestions](https://github.com/ChenYilong/iOSInterviewQuestions)



## 基础能力

**对象内存模型**
https://www.cnblogs.com/feng9exe/p/9186920.html
https://www.cnblogs.com/ioshe/p/5489086.html

**Runtime运行时**
https://www.jianshu.com/p/d4b55dae9a0d

* 运行时阶段的消息发送的详细步骤如下：
    * 检测selector 是不是需要忽略的。比如 Mac OS X 开发，有了垃圾回收就不理会retain,release 这些函数了。
    * 检测target 是不是nil 对象。ObjC 的特性是允许对一个 nil对象执行任何一个方法不会 Crash，因为会被忽略掉。
    * 如果上面两个都过了，那就开始查找这个类的 IMP，先从 cache 里面找，若可以找得到就跳到对应的函数去执行。
    * 如果在cache里找不到就找一下方法列表methodLists。
    * 如果methodLists找不到，就到超类的方法列表里寻找，一直找，直到找到NSObject类为止。
    * 如果还找不到，Runtime就提供了如下三种方法来处理：动态方法解析、消息接受者重定向、

**Categary & extension**

* extension:类的扩展，类似NSString(Number)
* categary:扩展函数。
* extension可以添加实例变量，而category是无法添加实例变量。
* extension在编译期决议（就是类的一部分），category在运行期决议。
* extension一般用来隐藏类的私有信息，无法直接为系统的类扩展，但可以先创建系统类的子类再添加extension。
* category可以给系统提供的类添加分类。
* extension和category都可以添加属性，但是category的属性不能生成成员变量和getter、setter方法的实现。

**Load方法 & Initialize**
* +Load方法的含义是将类对象或者category加载到内存中，这个过程发生在App启动时，在所有类都被注册后。
* 与Load不同的是，Initialize方法不会在一开始就会被调用，而是在类收到第一条消息时才会被调用。

**Block & Interface**
* 标准规范：Interface准循某种规则，Block不具有此特性。
* Block更灵活。
* Block注意引用计数，Interface为weak不存在此问题。


**引用计数基本原理**
* hashmap：key为对象地址，value指向对象的指针。

**TableView的优化**
* 图片渲染，缓存。
* 高度计数。
* cell重复利用。


**iOS的签名机制是怎么样的**

签名机制：
先将应用内容通过摘要算法，得到摘要。再用私钥对摘要进行加密得到密文。将源文本、密文、和私钥对应的公钥一并发布。

验证流程：
查看公钥是否是私钥方的，然后用公钥对密文进行解密得到摘要。
将APP用同样的摘要算法得到摘要，两个摘要进行比对，如果相等那么一切正常。


**NSOperation**

* https://www.jianshu.com/p/e6cd25f6da91
* GCD的支撑场景有限，有线程池使用方便等优势。


**metaclass理解**
* https://blog.csdn.net/u012179233/article/details/85279643 （结合对象存储结构一起看）

**Block 为什么用 copy?**
代码块 是存在栈区的, 需要通过 copy 拷贝到堆内存, ARC 下, 赋值的时候编译器会自行对 block 进行 copy 操作, copy 到堆内存, 与一般的对象是相同的.

## 开放问题
**设计一个可以无限滚动并且支持自动滚动的 SlideShow**

**设计一个进度条**

**设计一套大文件（如上百M的视频）下载方案**

**如果让你来实现 dispatch_once，你会怎么做？**

**设计一个类似 iOS 主屏可以下拉出现 Spotlight 的系统。(对 UIScrollView 的理解程度)**


* 软件启动流程
* 