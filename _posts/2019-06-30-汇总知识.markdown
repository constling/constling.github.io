---
layout: post
title:  "汇总知识"
date:   2019-06-30 22:00:00
categories: 面试
---

## 学习列表
* [服务端架构](https://blog.csdn.net/xyphf/article/details/81151486)


## 其它
**BS&CS的联系和区别**

* 模式不同
BS:指浏览器、服务端模式。
CS:指客户端、服务端模式。
* 安全级别的高、低不同。
* 程序架构不同
CS注重流程、权限校验。
BS注重访问速度。
* 软件重用不同
* 系统维护不同
CS系统升级难。BS由构件组成，升级容易。

b/s的优势

* 开发成本低。
* 管理维护简单
* 产品升级便利
* 用户培训费用低

不足

* 安全性
* 客户端受浏览器限制
* 不利于管理用户

**cookie和session的区别**

* cookie
    * cookie以文本格式存储在浏览器上，存储量有限。
    * 方便与javascript交换数据、方便获取用户信息。
    * 浏览器可能会禁用cookie。
    * 替代方案，url参数。
* session
    * 会话存储在服务端，可以无限量存储多个变量并且比cookie更安全。
    * 用条端会为每一个用户用一个id来标识。

**GET&POST的区别**
    
* GET
    * 参数包含在URL中。
* POST
    * 参数放在body中。
* GET在浏览器回退时是无害的，而POST会再次提交请求。
* GET产生的URL地址可以被Bookmark，而POST不可以。
* GET请求会被浏览器主动cache，而POST不会，除非手动设置。
* GET请求只能进行url编码，而POST支持多种编码方式。
* GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。
* GET请求在URL中传送的参数是有长度限制的，而POST没有。
* 对参数的数据类型，GET只接受ASCII字符，而POST没有限制。
* GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。
* GET参数通过URL传递，POST放在Request body中。


**Servlet**

Servlet是运行于服务端的java程序，一般实现自己的Java服务端应用都从HttpServlet类继承，然后实现自己的init | doGet | doPost | service方法。Servlet的生命周期从其加载开始，首先执行一次初始化，调用init方法，之后便可运行自身的服务，当生命周期结束时，调用destroy方法回收资源，结束服务。
仅了解原理当然是不够的，还要实战能力，在IDE中写写简单的代码谁都会，然而真正让一个程序能够运行起来也还需要点其他的东西，这里我指的是Servlet的容器。servlet的容器有很多，常用的以Tomcat为例，安装好Tomcat后，在开发时必须包含进Tomcat的lib。IDE确实惯坏了好多人，目录如何组织，程序如何编译、如何部署这些问题都被IDE屏蔽掉了，如果要对整体有比较透彻的了解，建议一切从命令行动手。
具体可参考：《Servlet与JSP核心编程》。

**JSP**

Java Server Pages，一种动态网页技术标准。JSP与Servlet一样，是在服务器端执行的。通常返回给客户端的就是一个HTML文本，因此客户端只要有浏览器就能浏览。

**AQS**

[学习链接](https://www.jianshu.com/p/da9d051dcc3d)

AQS定义了一套多线程访问共享资源的同步器框架。


**https如何防止劫持**

* https的安全基础是SSL。http+ssl=https。
* SSL提供加解密服务。

## 多线程编程
**生产者&消费者问题**

* 如果共享数据区已满的话，阻塞生产者继续生产数据放置入内；
* 如果共享数据区为空的话，阻塞消费者继续消费数据；

**哲学家就餐问题**

**读写问题**

* 只要求读文件的进程称为“Reader进程”，其它进程则称为“Writer进程”。
* 允许多个进程同时读一个共享对象，但不允许一个Writer进程和其他Reader进程或Writer进程同时访问共享对象

[5个同步问题](https://blog.csdn.net/naruto_ahu/article/details/8672376)


## 待学习
[链接1](https://www.cnblogs.com/nliao/p/3307648.html)

## 开放问题
**如何设计电商秒杀系统**


**如何进web优化**
