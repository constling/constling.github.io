---
layout: post
title:  "Sql"
date:   2019-10-02 22:05:00
categories: 其它
---


## 学习链接

* [菜鸟教程](https://www.runoob.com/mysql/mysql-administration.html)
* [命令](https://blog.csdn.net/jin13277480598/article/details/52504592)
* [mysql workbench使用]

## 三大范式

**关键字**

* 元组：表中的一行就是一个元组。
* 分量：元组中的某个属性。
* 码：表中可以唯一确定一个元组的某个属性或属性组。
    * 候选码：具有多个码，每一个都是候选码。
    * 主码：挑选一个作为主码。
    * 全码：一个码包含了所有的属性。
* 主属性：一个属性只要在任何一个修选码中出现过就是主属性。
* 非主属性：与主属性相码。

**定义**

* 第一范式：表的每个列和记录只包含一个值。（属性不可分）
* 第二范式：表具有第一范式特性，并且每个非主键列都可以通过主键得到。（非主属性完全依赖于码）
* 第三范式：表具有第一、第二范式特性，并且所有的非主键列只能从主键得到。
* BC范式：符合第三范式，并且主属性不依赖于主属性。（若一个关系达到了第三范式，并且它的候选码只有一个，或者它的每个候选码都是单属性）

**注记**

* 键码是函数决定U的所有属性的最小的属性集。
* 若某属性只出现在函数依赖的左边，则它是任一键码的成员。
* 若某属性只出现在函数依赖的右边，则它一定不是键码的成员。
* 若某属性在任何函数依赖的左右两边都没出现，则它肯定是任一键码的成员。
* 若某属性既出现在左边双出现在右边，则这可能是键码成员与可能不是。

**规范化步骤**

* 设原关系模式为R(U)，将U中的每个属性提升为一般属性，使每个属性不可分，达到1NF要求。
* 以1NF进行投影分解，消除关系模式中非主属性对键码的部分依赖，规范成2nf。
* 对2NF进行投影分解，消除关系模式中非主属性对键码的传递依赖，规范成3nf。
* 3NFf进行投影分解，消除关系模式中主属性对键码的传递依赖。


## Mysql

* mysqld --initialize-insecure --user=mysql
* 登录mysql：mysql -u root -p
* 查询用户：select host,user,authentication_string from mysql.user;
* update mysql.user set authentication_string="123456" where user="root";
* 退出：quit
* 连接数据库：use xhkdb;
* 查看当前使用的数据库:select database();
* 删除服务：sc delete mysql
* mysqld --console --skip-grant-tables --shared-memory

create table Student( id int(4) not null primary key auto_increment, name char(20) not null,sex int(4) )

insert into Student values(1, "tom", 0)

serverTimezone=GMT

https://www.cnblogs.com/liaojie970/p/7639930.html
